/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import solScene from '../assets/3d/sol.glb'


const  Sol = ({...props}) => {
  const { nodes, materials } = useGLTF(solScene);
  return (
    <group {...props} dispose={null}>
      {/* <group position={[1.7, 35.2, 18.1]} rotation={[0, 0, 0]} scale={-10.1}>
        <mesh
          castShadow
          receiveShadow
          geometry={
            nodes["7f3661fc72954e518c51143c9394dfa5_wire_224086086_0"].geometry
          }
          material={materials.wire_224086086}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={
            nodes["7f3661fc72954e518c51143c9394dfa5_wire_224086086_0_1"]
              .geometry
          }
          material={materials.wire_224086086}
        />
      </group> */}
      <group rotation={[0, -0.8, 0]} scale={3} position={[1.7, -1.2, 0.9]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_29.geometry}
          material={materials.gold}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_31.geometry}
          material={materials.gold}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_80.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_82.geometry}
          material={materials.armor}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_84.geometry}
          material={materials.robe}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_86.geometry}
          material={materials["human.HighPolyEyes"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_88.geometry}
          material={materials["human.body"]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049_dagger_0.geometry}
        material={materials.dagger}
        position={[1.1, 5.5, 18.3]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049001_dagger_0.geometry}
        material={materials.dagger}
        position={[-9.4, 29.6, 18.4]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049002_dagger_0.geometry}
        material={materials.dagger}
        position={[-7.6, 36.6, 16.2]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049003_dagger_0.geometry}
        material={materials.dagger}
        position={[9.3, 40.6, 18.4]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049004_dagger_0.geometry}
        material={materials.dagger}
        position={[11.6, 35.2, 21.2]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049005_dagger_0.geometry}
        material={materials.dagger}
        position={[-8.8, 33.5, 21.4]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049006_dagger_0.geometry}
        material={materials.dagger}
        position={[11.5, 30.3, 17.3]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.g_Cylinder049007_dagger_0.geometry}
        material={materials.dagger}
        position={[-4.8, 39.7, 22]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
    </group>
  );
}

export default Sol;
